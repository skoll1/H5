// 一起都因iphone开始



// ===================



// 移动设备和桌面设备的真正差异在：规格，计算能力不足，人们的使用习惯，触摸界面。
// 1.设备规格上的手机（最重要的就是要考虑小屏幕的尺寸，需要保证交互元素有足够大的尺寸来让手指操作）
// 2.硬件图形加速器：目前移动设备在绘图上都是所谓的“共享内存”。与电脑上的显卡不同，移动设备上的图形硬件没有专用的内存，只是共享系统内存
// 3.所有移动浏览器共享的，为支持先进浏览器而存在的功能，被统称为html5。
// 4.触摸和移动东西，是人们做的最基本的事情之一。
// 机器人看上去越像人，就越对我有吸引力，但是当机器人的外形快要接近人的时候，会让我们感觉到很奇怪，甚至是害怕。“谷”是人类与机器人舒适度印射等级关系的拐点。
// 用户界面需要的只是让人感觉快，而他自己无需真的快，只需要及时响应。（告诉用户已经到底了，而又不破坏手势意义的唯一方法）



// ========================页面优化===================

// 为什么页面加载缓慢？
// 1：http连接数
// ===========
// 每一个外链的资源都需要一次单独的http请求。每次请求都会包含一定的额外开销。对于图片来说，因为下载占到了请求时间的绝大部分，所以提倡并行下载，研究发现，为当前的域创建两个别名，能允许更多的并行下载，会使大文件的性能明显改善。

// 2：总的字节数
// ===========
// 文件越大越慢
// 3:等待时的渲染
// ============
// 当你把四五个script标签放到页面头部的时候，鬼才会快了。
// 4:延迟
// =====
// 
// 5:缓存能力差
// ==========
// 


// 图片加载的方法？设置成为背景图片，而且用media来适配不同的大小。


// 前端页面检测工具
// 1：YSLOW,pageSpeed,charles proxy,


// 第二次加载的速度提升
// 在http中缓存：使浏览器尽可能的将文件保存下来，直到超过缓存的极限（expries报头）----更次一点（验证实现缓存）
//              这个是在资源返回的时候来设置的么？cache-control:public,max-age=31536000。
// 使用网络缓存：localStorage,sessionStorage.后一个是一退出浏览器就失效，前一个不安全，用户可以修改和读取数据，有什么存在的意义。
//             网络存储也有同源的问题，如果用户重置浏览器。那么一切都会消失。  
//             localStorage.setItem(),getItem(),removeItem()
//             在实际项目中使用这个缓存
// 应用缓存： 事前提供一个清单，内含该应用所需要的全部资源，使得浏览器下载并缓存清单里面的内容。应用缓存和浏览器缓存完全独立。
//这个的整个api文档在mozilla开发者网站上找到。
// 

// ajax会破坏原来的链接：这样就会看不到用户分享之后想让别人看的东西了。引出下一个浏览器特性。。


// 1：浏览器历史API

// 2：click和tap事件

    *//2.1两者都会在点击的时候触发，但是在手机web端，click会有200~300ms的延迟来判断双击和长按，只有默认等待时间借宿以确定没有后续动作发生时，才会触发click事件。所以触摸事件更快，体验更好
          // tab封装了start,move,end三个事件的处理情况，但是click只是绑定了click事件。 